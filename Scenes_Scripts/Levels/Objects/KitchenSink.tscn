[gd_scene load_steps=11 format=3 uid="uid://bmhltsh5yk6ib"]

[ext_resource type="Script" path="res://Scenes_Scripts/Levels/Objects/KitchenSink.gd" id="1_dd2x4"]
[ext_resource type="PackedScene" uid="uid://bb58x7d4pboho" path="res://Blender/kitchen_sink.gltf" id="1_dl2eh"]
[ext_resource type="PackedScene" uid="uid://nf1bgcn3f8w0" path="res://Scenes_Scripts/Entities/Entity Elements/Interactable.tscn" id="2_swn0s"]
[ext_resource type="AudioStream" uid="uid://du5f6cx1mm8t4" path="res://Scenes_Scripts/Sounds/d0tdash_joedesh_squeak-final.wav" id="4_s0m6x"]

[sub_resource type="Shader" id="Shader_burxu"]
code = "//Copyright 2021 redvillusion
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files 
//(the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, 
//merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished
//to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
//OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
//LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
//IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
shader_type spatial;
 
render_mode unshaded, cull_front;
 
uniform bool enabled = false;
const float transparency = 0.0;
 
uniform float border_width : hint_range(0,1,0.001) = 0.02;
uniform vec4 color : source_color = vec4(0.71, 0.267, 0.51, 1);
 
uniform bool pattern = true;
uniform float line_number : hint_range(0,100,1) = 2;
uniform float line_sharpness : hint_range(0,10,0.001) = 1;
 
uniform bool pulse;
uniform float pulse_speed : hint_range(0,100,1);
 
uniform bool line_movement = true;
uniform float line_movement_speed : hint_range(-100,100,1) = 1;
 
uniform bool wave;
 
void vertex() {
	
	VERTEX += VERTEX * border_width * float(enabled);
}
 
void fragment() {
	
	ALPHA = transparency;
	if (enabled) {
		ALBEDO = color.xyz;
		ALPHA = color.a;
		if (pattern)
			{
				vec2 uv = VERTEX.xy * line_number;
				ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz;
		 
				if (pulse)
				{
					ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
				}
		 
				if (line_movement)
				{
					ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz;
				}
		 
				if (pulse && line_movement)
				{
					ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
				}
			}
	}
	
 
	if (wave)
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + TIME * line_movement_speed) * line_sharpness * color.xyz;
	}
 
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cdh55"]
render_priority = 0
shader = SubResource("Shader_burxu")
shader_parameter/enabled = false
shader_parameter/border_width = 0.02
shader_parameter/color = Color(0.71, 0.267, 0.51, 1)
shader_parameter/pattern = true
shader_parameter/line_number = 2.0
shader_parameter/line_sharpness = 1.0
shader_parameter/pulse = null
shader_parameter/pulse_speed = null
shader_parameter/line_movement = true
shader_parameter/line_movement_speed = 1.0
shader_parameter/wave = null

[sub_resource type="BoxShape3D" id="BoxShape3D_1q6ly"]
size = Vector3(0.2052, 0.725464, 0.210693)

[sub_resource type="BoxShape3D" id="BoxShape3D_nbvtg"]
size = Vector3(0.519775, 0.22229, 0.402283)

[sub_resource type="BoxShape3D" id="BoxShape3D_j48c1"]
size = Vector3(0.589355, 1.20557, 0.498291)

[sub_resource type="BoxShape3D" id="BoxShape3D_lm1t0"]
size = Vector3(3, 3, 3)

[node name="KitchenSink" type="StaticBody3D" node_paths=PackedStringArray("focused_meshes")]
collision_layer = 64
collision_mask = 133
script = ExtResource("1_dd2x4")
monologue_data = Array[String](["[center]This object's shape suggests that it is a reservoir,[/center][center]but I lack knowledge on what substance it may contain.[/center]"])
monologue_first_line_time = 0.5
focused_meshes = [NodePath("kitchen_sink/Washbasin_06")]

[node name="kitchen_sink" parent="." instance=ExtResource("1_dl2eh")]

[node name="Washbasin_06" parent="kitchen_sink" index="0"]
material_overlay = SubResource("ShaderMaterial_cdh55")

[node name="ColliderFoot" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000305176, 0.368713, 0.000366211)
shape = SubResource("BoxShape3D_1q6ly")

[node name="ColliderSink" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00158691, 0.835144, -0.0528259)
shape = SubResource("BoxShape3D_nbvtg")

[node name="Interactable" parent="." instance=ExtResource("2_swn0s")]

[node name="CollisionShape3D" parent="Interactable" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0109863, 0.588623, -0.0679932)
shape = SubResource("BoxShape3D_j48c1")

[node name="CollisionShape3D" parent="Interactable/InteractableRange" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.63377, 0)
shape = SubResource("BoxShape3D_lm1t0")

[node name="grind_AudioPlayer" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("4_s0m6x")
volume_db = -8.0
pitch_scale = 1.91
max_polyphony = 8
bus = &"Sounds"

[connection signal="focused" from="Interactable" to="." method="_on_interactable_focused"]
[connection signal="interact" from="Interactable" to="." method="_on_interactable_interact"]
[connection signal="unfocused" from="Interactable" to="." method="_on_interactable_unfocused"]

[editable path="kitchen_sink"]
[editable path="Interactable"]
